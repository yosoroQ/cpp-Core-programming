#include<iostream>
using namespace std;

//对象的初始化和清理-构造函数调用规则
/*默认情况下，c++编译器至少给一个类添加3个函数
1．默认构造函数(无参，函数体为空)

2．默认析构函数(无参，函数体为空)

3．默认拷贝构造函数，对属性进行值拷贝
*/ 

/*构造函数调用规则如下：
* 如果用户定义有参构造函数，c++不在提供默认无参构造，但是会提供默认拷贝构造
* 如果用户定义拷贝构造函数，c++不会再提供其他构造函数*/

class Person
{
public:
	//无参（默认）构造函数
	Person()
	{
		cout << "无参（默认）构造函数!" << endl;
	}
	//有参构造函数	
	Person(int a)
	{
		cout << "有参构造函数!" << endl;
		age=a;
	}
	//拷贝构造函数
	Person(const Person &p)
	{
		age = p.age;
		cout << "拷贝构造函数!" << endl;
	}
	
	//析构函数
	~Person() {
		cout << "析构函数!" << endl;
	}	
	
public:
	int age;
};

//1. 使用一个已经创建完毕的对象来初始化一个新对象
void test01()
{
	//如果不写拷贝构造，编译器会自动添加拷贝构造，并且做浅拷贝操作
	Person P1(18);   
	Person P2(P1);  
	cout << "P2的年龄为： " << P2.age << endl; 
}


void test02() 
{
	//如果用户提供有参构造，编译器不会提供默认构造，会提供拷贝构造
	Person P1;    //此时如果用户自己没有提供默认构造，会出错
	Person P2(10); 		 //用户提供的有参
	Person P3(P2); 	//此时如果用户没有提供拷贝构造，编译器会提供
	
	//如果用户提供拷贝构造，编译器不会提供其他构造函数
	Person P4; 		//此时如果用户自己没有提供默认构造，会出错
	Person P5(10); 	//此时如果用户自己没有提供有参，会出错	
	Person P6(P5); 		//用户自己提供拷贝构造
}

int main() {

    test01();

	system("pause");

	return 0;
}
